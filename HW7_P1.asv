%% Dynamics Engine
% Kieran Nichols
clc; clear all;

%%
% Initilizing variables
% using test case from some students on piazza
L = 2;
i.r = [0, 0, -L]'; 
offset = pi/2;
t = 0;
itr = 1000;
t_end = 10;
time = 0:t_end/itr:t_end;
itr = itr+1; %plus one to get the matrices to be the same amount of columns
torque = zeros(3,itr);
posp = zeros(3,itr);
velp = zeros(3,itr); % p represents prime reference frame aka point O'
accp = zeros(3,itr);

for k = 1:itr
    t = time(k);
    theta = -pi/4*cos(2*t)+offset;
    theta_d = pi/2*sin(2*t);
    theta_dd = pi*cos(2*t);

    f.f = cos(theta); 
    f.fd = ((pi*sin(2*t)*sin((pi*cos(2*t))/4 - pi/2))/2); 
    f.fdd = (pi*cos(2*t)*sin((pi*cos(2*t))/4 - pi/2) - (pi^2*sin(2*t)^2*cos((pi*cos(2*t))/4 - pi/2))/4); 

    ca = 0.05^2; % cross sectional area
    sa = 0.05*2*L; % side area
    m = 7800 * ca * 2 * L; % mass = density*volume
    I = [1/3*m*(0.05^2+4^2), 0,                 0;
        0,                  1/3*m*(0.05^2+4^2), 0;
        0,                  0,                 1/3*m*(0.05^2+0.05^2)];

    Mass = [m, 0, 0;
            0, m, 0;
            0, 0, m];
        
    Phi_q = [1 0 0 0;
             0 1 0 -L*cos(theta);
             0 0 1 L*cos(theta)];
         
    Qa = [0; 0; -m*9.81];
    
    qdd = f.fdd;
    
    Lamda = Phi_q'\(Qa - Mass*qdd); 
    torque(:,i) = Lambda;
    % Newton Euler equations
    % M*qdd + Phi_q'*Lamda = Qa
    % Lamda = Phi_q'\(Qa - M*qdd)
    % Lamda is the reaction force and torque that ensures that the contraints are fulfilled
    % qdd is the generalized accelerations
    % Phi_q is the Jacobian
    % Qa is the applied external force that do not have geometric contraints which will be gravity?
    % M is the Mass Matrix
    
end

figure
subplot(3,1,1)
plot(time,posp(1,:),time,posp(2,:),time,posp(3,:))
title('Position of point O-prime')
ylabel('position (m)')
legend('X','Y','Z')
subplot(3,1,2)
plot(time,velp(1,:),time,velp(2,:),time,velp(3,:))
title('Velocity of point O-prime')
ylabel('velocity (m/s)')
subplot(3,1,3)
plot(time,accp(1,:),time,accp(2,:),time,accp(3,:))
title('Acceleration of point O-prime')
ylabel('acceleration (m/s/s)')
xlabel('time(s)')
% 
figure
subplot(3,1,1)
plot(time,torque(1,:))
title('Torquex')
ylabel('Tx (Nm)')
legend('X','Y','Z')
subplot(3,1,2)
plot(time,torque(2,:))
title('Torque y')
ylabel('Ty (Nm)')
subplot(3,1,3)
plot(time,torque(3,:))
title('Torque_z')
ylabel('Tz (Nm)')
xlabel('time(s)')

% disp('complete');

